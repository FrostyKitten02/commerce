openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8004/api
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: Checkout
  description: Order checkout and management endpoints
paths:
  /checkout/submit-cart:
    post:
      tags:
      - Checkout
      summary: Submit cart for checkout
      description: Process the user's shopping cart and create an order with billing
        and shipping information
      operationId: submitCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitCartReq"
        required: true
      responses:
        "400":
          description: Invalid checkout data or empty cart
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderCreatedRes"
        "200":
          description: Order created successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderCreatedRes"
        "401":
          description: Authentication required
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderCreatedRes"
      security:
      - Bearer Authentication: []
  /checkout/orders:
    get:
      tags:
      - Checkout
      summary: Get user orders
      description: Retrieve all orders placed by the current authenticated user with
        order details and status
      operationId: getUserOrders
      responses:
        "200":
          description: Orders retrieved successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDto"
        "401":
          description: Authentication required
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderDto"
      security:
      - Bearer Authentication: []
components:
  schemas:
    SubmitCartReq:
      required:
      - cartId
      - shippingAddress
      - shippingCity
      - shippingCountry
      - shippingPostalCode
      type: object
      properties:
        cartId:
          type: string
          format: uuid
        shippingAddress:
          type: string
        shippingCity:
          type: string
        shippingPostalCode:
          type: string
        shippingCountry:
          type: string
    OrderCreatedRes:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
    OrderDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        cartId:
          type: string
          format: uuid
        shippingAddress:
          type: string
        shippingCity:
          type: string
        shippingPostalCode:
          type: string
        shippingCountry:
          type: string
        totalAmount:
          type: number
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemDto"
    OrderItemDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        productName:
          type: string
        productSku:
          type: string
        unitPrice:
          type: number
        quantity:
          type: integer
          format: int32
        lineTotal:
          type: number
  securitySchemes:
    bearerAuth:
      type: http
      name: bearerAuth
      scheme: bearer
      bearerFormat: JWT
