openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8000/api
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: Authentication
  description: User authentication and registration endpoints
paths:
  /auth/register:
    post:
      tags:
      - Authentication
      summary: User registration
      description: "Register a new user account with email, password, first name,\
        \ and last name. Assigns default user role."
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: User registered successfully
        "400":
          description: Invalid input data or user already exists
        "500":
          description: Server configuration error
  /auth/login:
    post:
      tags:
      - Authentication
      summary: User login
      description: "Authenticate user with email and password, returns JWT token for\
        \ accessing protected endpoints"
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: "Login successful, JWT token returned"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid request format
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Invalid credentials
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        passwordRepeated:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
